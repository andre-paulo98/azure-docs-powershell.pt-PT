### YamlMime:Tutorial
title: Criar máquinas virtuais com o Azure PowerShell
metadata:
  title: Criar máquinas virtuais com o Azure PowerShell
  description: Introdução ao Azure PowerShell através da criação de máquinas virtuais.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurepowershell
  ms.date: 12/13/2018
  ms.author: sttramer
  author: sptramer
  manager: carmonm
  ms.devlang: azure-powershell
  ms.prod: powershell
  ms.technology: azure-powershell
  ms.topic: tutorial
  clicktale: true
  ms.openlocfilehash: 98fa4e7428104a4b2e61029e04655b8682743cca
  ms.sourcegitcommit: 0356a4694f77eda40eec8c3759b9bb7f28979eb6
  ms.translationtype: HT
  ms.contentlocale: pt-PT
  ms.lasthandoff: 06/18/2019
  ms.locfileid: "67193282"
items:
- durationInMinutes: 1
  content: >-
    Neste tutorial, irá aprender todos os passos envolvidos na configuração de uma máquina virtual com o Azure PowerShell. O tutorial também abrange consultas de saída, a reutilização de recursos do Azure e a limpeza de recursos.


    Pode concluir este tutorial com a experiência interativa disponibilizada através do Azure Cloud Shell, ou pode [instalar o Azure PowerShell](install-az-ps.md) localmente.


    Utilize __ctrl-shift-v__ (__cmd-shift-v__ no macOS) para colar texto de tutorial no Azure Cloud Shell.
- durationInMinutes: 1
  title: Iniciar sessão
  content: >-
    Se estiver a utilizar uma instalação local do Azure PowerShell, terá de iniciar sessão antes de realizar qualquer outro passo.


    ```powershell-interactive

    Connect-AzAccount

    ```


    Conclua o processo de início de sessão, seguindo os passos apresentados no seu terminal.
- durationInMinutes: 1
  title: Criar um grupo de recursos
  content: >-
    No Azure, todos os recursos são alocados num grupo de gestão de recursos. Os grupos de recursos oferecem agrupamentos lógicos de recursos para que seja mais fácil trabalhar com os mesmos como uma coleção.

    Neste tutorial, todos os recursos criados estão num único grupo com o nome `TutorialResources`.


    ```powershell-interactive

    New-AzResourceGroup -Name TutorialResources -Location eastus

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Location          : eastus

    ProvisioningState : Succeeded

    Tags              :

    ResourceId        : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources

    ```
- durationInMinutes: 1
  title: Criar credenciais de administrador para a VM
  content: >-
    Antes de poder criar uma nova máquina virtual, tem de criar um objeto de credencial com o nome de utilizador e a palavra-passe da conta de administrador da VM do Windows.


    ```powershell-interactive

    $cred = Get-Credential -Message "Enter a username and password for the virtual machine."

    ```


    Introduza o nome de utilizador e a palavra-passe quando solicitados. O objeto de credencial resultante é transmitido como um parâmetro no próximo passo.


    ```Output

    Windows PowerShell credential request.

    Enter a username and password for the virtual machine.

    User: tutorAdmin

    Password for user tutorAdmin: *********

    ```
- durationInMinutes: 4
  title: Criar uma máquina virtual
  content: >-
    As máquinas virtuais no Azure têm um elevado número de dependências. O Azure PowerShell cria estes recursos por si com base nos argumentos da linha de comandos que especificar. Para legibilidade, estamos a utilizar o [splatting do PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting) para transmitir os parâmetros aos cmdlets do Azure PowerShell.


    Crie uma nova máquina virtual com o Windows.


    ```powershell-interactive

    $vmParams = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM1'
      Location = 'eastus'
      ImageName = 'Win2016Datacenter'
      PublicIpAddressName = 'tutorialPublicIp'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM1 = New-AzVM @vmParams

    ```

    Enquanto a VM é criada, pode ver os valores dos parâmetros utilizados e os recursos do Azure que estão a ser criados.

    O PowerShell irá apresentar uma barra de progresso, conforme mostrado abaixo.


    ```Output
     Creating Azure resources
      39% \
      [ooooooooooooooooooooooooooooooooooo                                                                 ]

      Creating TutorialVM1 virtual machine.
    ```


    Assim que a VM estiver pronta, pode ver os resultados no Portal do Azure ou ao consultar a variável \$newVM1.


    ```powershell-interactive

    $newVM1

    ```


    ```Output

    ResourceGroupName : TutorialResources

    Id                : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM1

    VmId              : 12345678-9abc-def0-1234-56789abcedf0

    Name              : TutorialVM1

    Type              : Microsoft.Compute/virtualMachines

    Location          : eastus

    Tags              : {}

    HardwareProfile   : {VmSize}

    NetworkProfile    : {NetworkInterfaces}

    OSProfile         : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState : Succeeded

    StorageProfile    : {ImageReference, OsDisk, DataDisks}

    ```


    Os valores de propriedade listados entre chavetas são objetos aninhados. No próximo passo, vamos mostrar como pode ver valores específicos nestes objetos aninhados.
- durationInMinutes: 5
  title: Obter informações da VM através de consultas
  content: >-
    Vamos obter algumas informações mais detalhadas da VM que acabámos de criar. Neste exemplo, verificamos o nome da VM e a conta de administrador criados.


    ```powershell-interactive

    $newVM1.OSProfile | Select-Object ComputerName,AdminUserName

    ```


    ```Output

    ComputerName AdminUsername

    ------------ -------------

    TutorialVM1  tutorialAdmin

    ```


    Podemos utilizar outros comandos do Azure PowerShell para obter informações específicas sobre a configuração de rede.


    ```powershell-interactive

    $newVM1 | Get-AzNetworkInterface |
      Select-Object -ExpandProperty IpConfigurations |
        Select-Object Name,PrivateIpAddress
    ```


    Neste exemplo, estamos a utilizar o pipeline do PowerShell para enviar o objeto \$newVM1 para o cmdlet `Get-AzNetworkInterface`. A partir do objeto da interface de rede resultante, selecionamos o objeto IpConfigurations aninhado. A partir do objeto IpConfigurations, selecionamos as propriedades Name e PrivateIpAddress.


    ```Output

    Name        PrivateIpAddress

    ----        ----------------

    TutorialVM1 192.168.1.4

    ```


    Para confirmar que a VM está em execução, é necessário ligar através do Ambiente de Trabalho Remoto. Para isso, precisamos de saber o endereço IP público.


    ```powershell-interactive

    $publicIp = Get-AzPublicIpAddress -Name tutorialPublicIp -ResourceGroupName TutorialResources


    $publicIp | Select-Object Name,IpAddress,@{label='FQDN';expression={$_.DnsSettings.Fqdn}}

    ```


    Neste exemplo, utilizamos `Get-AzPublicIpAddress` e armazenamos os resultados na variável \$publicIp. A partir desta variável, selecionamos as propriedades e utilizamos uma expressão para obter a propriedade Fqdn aninhada.


    ```Output

    Name             IpAddress           FQDN

    ----             ---------           ----

    tutorialPublicIp <PUBLIC_IP_ADDRESS> tutorialvm1-8a0999.eastus.cloudapp.azure.com

    ```


    A partir do seu computador local, pode executar o seguinte comando para ligar à VM através do Ambiente de Trabalho Remoto.


    ```powershell-interactive

    mstsc.exe /v <PUBLIC_IP_ADDRESS>

    ```


    Para obter mais informações sobre a consulta de propriedades de objeto, veja [Consultar recursos do Azure](./queries-azureps.md).
- durationInMinutes: 4
  title: Criar uma nova VM na sub-rede existente
  content: >-
    A segunda VM utiliza a sub-rede existente.


    ```powershell-interactive

    $vm2Params = @{
      ResourceGroupName = 'TutorialResources'
      Name = 'TutorialVM2'
      ImageName = 'Win2016Datacenter'
      VirtualNetworkName = 'TutorialVM1'
      SubnetName = 'TutorialVM1'
      PublicIpAddressName = 'tutorialPublicIp2'
      Credential = $cred
      OpenPorts = 3389
    }

    $newVM2 = New-AzVM @vm2Params


    $newVM2

    ```


    ```Output

    ResourceGroupName        : TutorialResources

    Id                       : /subscriptions/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX/resourceGroups/TutorialResources/providers/Microsoft.Compute/virtualMachines/TutorialVM2

    VmId                     : 12345678-9abc-def0-1234-56789abcedf1

    Name                     : TutorialVM2

    Type                     : Microsoft.Compute/virtualMachines

    Location                 : eastus

    Tags                     : {}

    HardwareProfile          : {VmSize}

    NetworkProfile           : {NetworkInterfaces}

    OSProfile                : {ComputerName, AdminUsername, WindowsConfiguration, Secrets}

    ProvisioningState        : Succeeded

    StorageProfile           : {ImageReference, OsDisk, DataDisks}

    FullyQualifiedDomainName : tutorialvm2-dfa5af.eastus.cloudapp.azure.com

    ```


    Pode ignorar alguns passos para obter o endereço IP público da nova VM, uma vez que é devolvido na propriedade FullyQualifiedDomainName do objeto \$newVM2. Utilize o seguinte comando para ligar através do Ambiente de Trabalho Remoto.


    ```powershell-interactive

    mstsc.exe /v $newVM2.FullyQualifiedDomainName

    ```
- durationInMinutes: 4
  title: Limpeza
  content: >-
    Agora que concluiu o tutorial, está na altura de limpar os recursos criados. Pode eliminar recursos individuais com o comando `Remove-AzResource`, mas a forma mais segura de remover todos os recursos num grupo de recursos é eliminar o grupo com o comando `Remove-AzResourceGroup`.


    ```powershell-interactive

    $job = Remove-AzResourceGroup -Name TutorialResources -Force -AsJob


    $job

    ```


    ```Output

    Id     Name            PSJobTypeName   State         HasMoreData     Location             Command

    --     ----            -------------   -----         -----------     --------             -------

    1      Long Running... AzureLongRun... Running       True            localhost            Remove-AzResource...

    ```


    Este comando elimina os recursos criados durante o tutorial e desaloca-os garantidamente pela ordem correta. O parâmetro `-AsJob` impede que o PowerShell bloqueie enquanto a eliminação está em curso. Para aguardar até que a eliminação esteja concluída, utilize o seguinte comando:


    ```powershell-interactive

    Wait-Job -Id $job.Id

    ```


    Quando a limpeza estiver concluída, o tutorial termina. Continue para ver um resumo de tudo o que aprendeu e obter ligações para recursos que irão ajudá-lo nos passos seguintes.
- durationInMinutes: 1
  title: Resumo
  content: "\nParabéns! Aprendeu a criar VMs com recursos novos ou existentes, utilizou expressões e outros comandos do Azure PowerShell para capturar dados que são armazenados em variáveis de shell e viu alguns dos recursos que são criados para as VMs do Azure.\n\nO que faz a partir daqui depende de como planeia utilizar o Azure PowerShell. Tem uma variedade de materiais à sua disposição que explicam em maior profundidade as funcionalidades que este tutorial abrange.\n\n### <a name=\"in-depth-azure-powershell-documentation\"></a>Documentação detalhada do Azure PowerShell\n\nPode querer explorar a [documentação completa do Azure PowerShell](overview.md).\n\nPara obter mais informações sobre os comandos utilizados neste tutorial, veja os artigos seguintes.\n\n- [New-AzResourceGroup](/powershell/module/Az.resources/new-Azresourcegroup)\n- [Get-Credential](/powershell/module/microsoft.powershell.security/get-credential)\n- [New-AzVM](/powershell/module/Az.compute/new-Azvm)\n- [Select-Object](/powershell/module/microsoft.powershell.utility/select-object)\n- [Get-AzPublicIpAddress](/powershell/module/Az.network/get-AzPublicIpAddress)\n- [Remove-AzResourceGroup](/powershell/module/Az.resources/Remove-AzResourceGroup)\n- [Wait-Job](/powershell/module/microsoft.powershell.core/wait-job)\n\nTambém existem artigos que aprofundam as funcionalidades que o tutorial apresentou.\n\n- [Splatting do PowerShell](/powershell/module/microsoft.powershell.core/about/about_splatting)\n- [Consultas](queries-azureps.md)\n- [Formatação](formatting-output.md)\n- [Utilizar tarefas do PowerShell](using-psjobs.md)\n\n### <a name=\"sample-scripts\"></a>Scripts de exemplo\n\nSe quiser começar imediatamente a fazer tarefas específicas, veja alguns scripts de exemplo.\n\n- [Máquinas Virtuais do Linux](/azure/virtual-machines/linux/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Máquinas Virtuais do Windows](/azure/virtual-machines/windows/powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Aplicações Web](/azure/app-service-web/app-service-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [Bases de Dados SQL](/azure/sql-database/sql-database-powershell-samples?toc=%2fpowershell%2fmodule%2ftoc.json)\n- [BD do Cosmos](/azure/cosmos-db/powershell-samples?toc=%2fpowershell%2fmodules%2ftoc.json)\n\n### <a name=\"feedback\"></a>Comentários\n\nSe quiser enviar comentários, sugestões ou colocar questões, existem várias formas de entrar em contacto connosco.\n\n* `Send-Feedback` é um comando incorporado do Azure PowerShell que lhe permite enviar comentários de forma livre à equipa.\n* Submeta um pedido de funcionalidade ou um relatório de erros no [repositório do Azure PowerShell](https://github.com/Azure/azure-powershell/issues).\n* Faça uma pergunta ou obtenha esclarecimentos ao submeter um problema no [repositório da documentação do Azure PowerShell](https://github.com/MicrosoftDocs/azure-docs-powershell/issues).\n\nEsperamos que goste de utilizar o Azure PowerShell!"
